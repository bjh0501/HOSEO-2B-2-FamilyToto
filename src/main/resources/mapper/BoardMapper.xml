<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<insert id="insertCustBoard">
		INSERT INTO BOARD   
		    (BOARD_REPLY_NO,	BOARD_GRP_NO, 	BOARD_TITLE,	BOARD_CONTENTS,	
		    REG_CUST_NO,	    REG_DT,			REG_IP,			USE_YN)
		VALUES
		    (
		    <choose>
			    <when test="boardReplyNo != null">
				    #{boardReplyNo}, #{boardReplyNo}
			    </when>
			    <otherwise>
			    	0, 0/* MAX(BOARD_GRP_NO)+1 수정해야함 */
			    </otherwise>
		    </choose>
		    
		    
		    ,	#{boardTitle},#{boardContents}, 		    
		    #{regCustNo},		now(), 			#{regIp},			'Y');
	</insert>
	<select  id="getBoardList" parameterType="BoardVO" resultType="BoardVO">
		select R2.* FROM(
			select	R1.*
			,		COUNT(BOARD_NO) as visit
				FROM(
					SELECT	B.BOARD_NO as boardNo
					,		B.BOARD_REPLY_NO as boardReplyNo
					,		B.BOARD_TITLE as boardTitle
					,		B.REG_CUST_NO as regCustNo
					,		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID)  as custNickname
					,		IFNULL(SC_CUST_GUBUN, 'ON') AS custGubun 
					,		IFNULL(B.CHG_DT, B.REG_DT) as regDt
					FROM	BOARD B
						LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
						LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
						LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
					WHERE	B.USE_YN = 'Y'
					AND		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID) IS NOT NULL
	                <if test="searchType=='title' and keyword != null and keyword != ''">
		    			AND		B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
			    	</if>
			    	<if test="searchType=='contents' and keyword != null and keyword != ''">
			    		AND		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%')
			    	</if>
			    	<if test="searchType=='both' and keyword != null and keyword != ''">
			    		AND		(B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
		           		OR		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%'))
			    	</if>
					ORDER BY B.BOARD_GRP_NO  DESC, B.BOARD_GRP_NO  ASC
				) R1
			LEFT OUTER JOIN WEB_LOG WL ON WL.BOARD_NO = R1.boardNo
		GROUP BY R1.boardNo, R1.boardReplyNo, R1.boardTitle, R1.regCustNo, R1.custNickname, R1.custGubun, R1.regDt
		) R2
	    LIMIT #{startList}, #{listSize}
	</select>
	<select id="getBoardListCnt" resultType="int">
		SELECT	COUNT(*)
			FROM	BOARD B
				LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
				LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
				LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
		    WHERE	B.USE_YN = 'Y'
		    AND		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID) IS NOT NULL
		    <if test="searchType=='title' and keyword != null and keyword != ''">
	    		AND		B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
	    	</if>
	    	<if test="searchType=='contents' and keyword != null and keyword != ''">
	    		AND		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%')
	    	</if>
	    	<if test="searchType=='both' and keyword != null and keyword != ''">
	    		AND		(B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
           		OR		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%'))
	    	</if>
	</select>
	<select id="getShowBoard" resultType="BoardVO">
		SELECT	B.BOARD_NO as boardNo
		,		B.BOARD_TITLE as boardTitle
		,		B.BOARD_REPLY_NO as boardReplyNo
		,		IFNULL(B.REG_CUST_NO, 0) as  regCustNo
	    ,		B.BOARD_CONTENTS as boardContents
		,		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID)  as custNickname
		,		IFNULL(SC_CUST_GUBUN, 'ON') AS custGubun
		,		IFNULL(B.CHG_DT, B.REG_DT) as regDt
		,		COUNT(WC.BOARD_NO) as visit
		FROM	BOARD B
			INNER JOIN WEB_LOG WC ON B.BOARD_NO = WC.BOARD_NO
			LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
			LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
			LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
	    WHERE	B.USE_YN = 'Y'
	    AND		B.BOARD_NO = ${boardNo}
	</select>
	<update id="updateDeleteBoard">
		UPDATE	BOARD
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_IP = '${chgIp}'
		,		CHG_CUST_NO = ${chgCustNo}
		WHERE	BOARD_NO = ${boardNo}
		AND		REG_CUST_NO = ${chgCustNo}
		AND		USE_YN = 'Y'
	</update>
	<update id="updateDeleteAnnoBoard">
		UPDATE	BOARD
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_IP = '${chgIp}'
		WHERE	BOARD_NO = ${boardNo}
		AND		USE_YN = 'Y'		
	</update>
	<insert id="insertAnnoBoard">
		INSERT INTO BOARD   
		    (BOARD_REPLY_NO,	BOARD_TITLE,	BOARD_CONTENTS,	
		    BOARD_ANNO_ID,	    BOARD_ANNO_PW,	REG_DT,			REG_IP,			USE_YN)
		VALUES
		    (0, 				#{boardTitle},#{boardContents}, 		    
		    #{boardAnnoId},		#{boardAnnoPw},	now(), 			'${regIp}',			'Y');
	</insert>
	<select id="getUpdateBoard" resultType="BoardVO">
		SELECT	BOARD_ANNO_ID as boardAnnoId
		,		BOARD_TITLE as boardTitle
        ,		BOARD_CONTENTS as boardContents
        ,		BOARD_NO as boardNo
        ,		BOARD_ANNO_PW as boardAnnoPw
        FROM	BOARD
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</select>
	<select id="commentCnt" resultType="int">
		SELECT	COUNT(*) as commentCnt
		FROM	COMMENT C
			INNER JOIN BOARD B ON B.BOARD_NO = C.BOARD_NO AND B.USE_YN = 'Y' 
			LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = C.REG_CUST_NO AND SC.USE_YN ='Y'
			LEFT OUTER JOIN CUSTOM CUST ON CUST.CUST_NO = C.REG_CUST_NO AND CUST.USE_YN ='Y' 
			LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = CUST.FAMILY_CUST_NO AND FC.USE_YN ='Y'
		WHERE	C.USE_YN = 'Y'
		AND		B.BOARD_NO = #{boardNo}
		AND		IFNULL(IFNULL(C.COMMENT_ANNO_ID, SC.SC_CUST_NICK), FC.FAMILY_CUST_NICKNAME) IS NOT NULL
	</select>
	<select id="checkAnnoBoardPass" resultType="String">
		SELECT	BOARD_ANNO_PW as commentAnnoPw
        FROM	BOARD
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</select>
	<update id="updateBoard">
		UPDATE	BOARD
        SET		BOARD_TITLE = #{boardTitle}
        ,		BOARD_CONTENTS = #{boardContents}
        ,		BOARD_ANNO_PW = #{boardAnnoPw}
        ,		CHG_DT = NOW()
        ,		CHG_IP = #{chgIp}
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
	
	<update id="updateSocialBoard">
		UPDATE	BOARD
        SET		BOARD_TITLE = #{boardTitle}
        ,		BOARD_CONTENTS = #{boardContents}
        ,		CHG_DT = NOW()
        ,		CHG_IP = #{chgIp}
        ,		CHG_CUST_NO = #{chgCustNo}
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
</mapper>