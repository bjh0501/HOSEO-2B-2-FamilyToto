<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<insert id="insertCustBoard" useGeneratedKeys="true" keyProperty="boardNo" parameterType="BoardVO">
		INSERT INTO BOARD (   
		    BOARD_GRP_NO,	 	BOARD_TITLE,	BOARD_CONTENTS,	
		    REG_CUST_NO,	    REG_DT,			REG_IP,			USE_YN,
		    BOARD_GRP_ORD,		BOARD_GRP_DEPTH
		) VALUES (
		    #{boardGrpNo},		#{boardTitle},	#{boardContents}, 		    
		    #{regCustNo},		now(), 			#{regIp},		'Y',
		    #{boardGrpOrd},		#{boardGrpDepth});
	</insert>
	<insert id="insertAnnoBoard" useGeneratedKeys="true" keyProperty="boardNo"  parameterType="BoardVO">
		INSERT INTO BOARD   
		    (BOARD_GRP_NO,		BOARD_TITLE,	BOARD_CONTENTS,	
		    BOARD_ANNO_ID,	    BOARD_ANNO_PW,	REG_DT,			REG_IP,			USE_YN,
		    BOARD_GRP_ORD,		BOARD_GRP_DEPTH)
		VALUES
		    (
			#{boardGrpNo},		#{boardTitle},	#{boardContents}, 		    
		    #{boardAnnoId},		#{boardAnnoPw},	now(), 			#{regIp},			'Y',
		    #{boardGrpOrd},		#{boardGrpDepth});
	</insert>
	<update id="updateBoardGrpNo">
		UPDATE	BOARD
		SET		BOARD_GRP_NO = #{boardNo} 
		WHERE	BOARD_NO = #{boardNo}
		AND		USE_YN = 'Y'
	</update>
	<!-- 삭제된것도 수정되어야하기때문에 useYN 사용x -->
	<update id="updateBeforeReply">
		<![CDATA[
		UPDATE	BOARD
		SET		BOARD_GRP_ORD = BOARD_GRP_ORD +1
		WHERE	BOARD_GRP_NO = #{boardGrpNo}
		AND		BOARD_GRP_ORD >= #{boardGrpOrd}
		]]>
	</update>		
	<select  id="getBoardList" parameterType="BoardVO" resultType="BoardVO">
		select	R1.*
		,COUNT(COM.COMMENT_NO) as commentCnt
			FROM(
				SELECT	B.BOARD_NO as boardNo
				,		B.BOARD_GRP_NO as boardGrpNo
				,		B.BOARD_REPLY_NO as boardReplyNo
				,		B.BOARD_TITLE as boardTitle
				,		B.REG_CUST_NO as regCustNo
				,		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID)  as custNickname
				,		IFNULL(SC_CUST_GUBUN, 'ON') AS custGubun 
				,		IFNULL(B.CHG_DT, B.REG_DT) as regDt
				,		B.BOARD_GRP_DEPTH as boardGrpDepth
				,		B.BOARD_GRP_ORD as boardGrpOrd
				,		B.BOARD_VISIT as visit
				,		BF.BOARD_FILE_NAME as boardFileName
				FROM	BOARD B
					LEFT OUTER JOIN BOARD_FILE BF ON B.BOARD_NO = BF.BOARD_NO AND BF.USE_YN = 'Y'
					LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
					LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
					LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
				WHERE	B.USE_YN = 'Y'
				AND		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID) IS NOT NULL
                   <if test="searchType=='title' and keyword != null and keyword != ''">
	    			AND		B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
		    	</if>
		    	<if test="searchType=='contents' and keyword != null and keyword != ''">
		    		AND		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%')
		    	</if>
		    	<if test="searchType=='both' and keyword != null and keyword != ''">
		    		AND		(B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
	           		OR		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%'))
		    	</if>
                   ORDER BY B.BOARD_GRP_NO DESC, B.BOARD_GRP_ORD ASC 
			) R1
            LEFT OUTER JOIN COMMENT COM ON R1.boardNo = COM.BOARD_NO AND COM.USE_YN = 'Y'
            GROUP BY boardNo
            ORDER BY R1.boardGrpNo DESC, R1.boardGrpOrd ASC
		LIMIT #{startList}, #{listSize}
	</select>
	<select id="getBoardListCnt" resultType="int">
		SELECT	COUNT(*)
		FROM	BOARD B
			LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
			LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
			LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
	    WHERE	B.USE_YN = 'Y'
	    AND		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID) IS NOT NULL
	    <if test="searchType=='title' and keyword != null and keyword != ''">
    		AND		B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
    	</if>
    	<if test="searchType=='contents' and keyword != null and keyword != ''">
    		AND		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%')
    	</if>
    	<if test="searchType=='both' and keyword != null and keyword != ''">
    		AND		(B.BOARD_TITLE LIKE CONCAT('%', #{keyword}, '%')
          		OR		B.BOARD_CONTENTS LIKE CONCAT('%', #{keyword}, '%'))
    	</if>
	</select>
	<select id="getShowBoard" resultType="BoardVO">
        SELECT	B.BOARD_NO as boardNo
		,		B.BOARD_TITLE as boardTitle
		,		B.BOARD_REPLY_NO as boardReplyNo
		,		IFNULL(B.REG_CUST_NO, 0) as  regCustNo
	    ,		B.BOARD_CONTENTS as boardContents
		,		IFNULL(IFNULL(FC.FAMILY_CUST_NICKNAME, SC.SC_CUST_NICK), B.BOARD_ANNO_ID)  as custNickname
		,		IFNULL(SC_CUST_GUBUN, 'ON') AS custGubun
		,		IFNULL(B.CHG_DT, B.REG_DT) as regDt
		,		IFNULL(B.BOARD_VISIT, 0) as visit
        ,		IFNULL(BF.BOARD_FILE_PATH, '') as boardFilePath
        ,		IFNULL(BF.BOARD_FILE_NAME, '') as boardFileName
        ,		B.BOARD_GRP_NO as boardGrpNo
        ,		B.BOARD_GRP_ORD as boardGrpOrd
        ,		B.BOARD_GRP_DEPTH as boardGrpDepth
		FROM	BOARD B
			LEFT OUTER JOIN CUSTOM C ON C.CUST_NO = B.REG_CUST_NO AND C.USE_YN = 'Y'
			LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = B.REG_CUST_NO AND SC.USE_YN ='Y'
			LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = C.FAMILY_CUST_NO AND FC.USE_YN ='Y'
            LEFT OUTER JOIN BOARD_FILE BF ON BF.BOARD_NO = B.BOARD_NO AND BF.USE_YN = 'Y'
	    WHERE	B.USE_YN = 'Y'
	    AND		B.BOARD_NO = #{boardNo}
	</select>
	<update id="updateDeleteBoard">
		UPDATE	BOARD
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_IP = #{chgIp}
		,		CHG_CUST_NO = #{chgCustNo}
		WHERE	BOARD_NO = #{boardNo}
		AND		REG_CUST_NO = #{chgCustNo}
		AND		USE_YN = 'Y'
	</update>
	<update id="updateDeleteAnnoBoard">
		UPDATE	BOARD
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_IP = #{chgIp}
		WHERE	BOARD_NO = #{boardNo}
		AND		USE_YN = 'Y'		
	</update>
	
	<select id="getUpdateBoard" resultType="BoardVO">
		
        SELECT	BOARD_ANNO_ID as boardAnnoId
		,		BOARD_TITLE as boardTitle
        ,		BOARD_CONTENTS as boardContents
        ,		B.BOARD_NO as boardNo
        ,		BOARD_ANNO_PW as boardAnnoPw
        ,		BF.BOARD_FILE_NAME as boardFileName
        FROM	BOARD B
			LEFT OUTER JOIN BOARD_FILE BF ON B.BOARD_NO = BF.BOARD_NO AND BF.USE_YN = 'Y'
        WHERE	B.BOARD_NO = #{boardNo}
        AND		B.USE_YN = 'Y'
	</select>
	<select id="commentCnt" resultType="int">
		SELECT	COUNT(*) as commentCnt
		FROM	COMMENT C
			INNER JOIN BOARD B ON B.BOARD_NO = C.BOARD_NO AND B.USE_YN = 'Y' 
			LEFT OUTER JOIN SOCIAL_CUSTOM SC ON SC.SC_CUST_NO = C.REG_CUST_NO AND SC.USE_YN ='Y'
			LEFT OUTER JOIN CUSTOM CUST ON CUST.CUST_NO = C.REG_CUST_NO AND CUST.USE_YN ='Y' 
			LEFT OUTER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = CUST.FAMILY_CUST_NO AND FC.USE_YN ='Y'
		WHERE	C.USE_YN = 'Y'
		AND		B.BOARD_NO = #{boardNo}
		AND		IFNULL(IFNULL(C.COMMENT_ANNO_ID, SC.SC_CUST_NICK), FC.FAMILY_CUST_NICKNAME) IS NOT NULL
	</select>
	<select id="checkAnnoBoardPass" resultType="String">
		SELECT	BOARD_ANNO_PW as commentAnnoPw
        FROM	BOARD
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</select>
	<update id="updateBoard">
		UPDATE	BOARD
        SET		BOARD_TITLE = #{boardTitle}
        ,		BOARD_CONTENTS = #{boardContents}
        ,		BOARD_ANNO_PW = #{boardAnnoPw}
        ,		CHG_DT = NOW()
        ,		CHG_IP = #{chgIp}
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
	
	<update id="updateSocialBoard">
		UPDATE	BOARD
        SET		BOARD_TITLE = #{boardTitle}
        ,		BOARD_CONTENTS = #{boardContents}
        ,		CHG_DT = NOW()
        ,		CHG_IP = #{chgIp}
        ,		CHG_CUST_NO = #{chgCustNo}
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
	<insert id="insertFile">
		INSERT INTO BOARD_FILE(
			BOARD_NO,		BOARD_FILE_PATH,	BOARD_FILE_NAME,	REG_CUST_NO,
			REG_DT,			REG_IP,				USE_YN
        ) VALUES (
			#{boardNo},		#{boardFilePath},	#{boardFileName},	#{regCustNo},
            NOW(),			#{regIp},			'Y'
        )
	</insert>
	<update id="updateNotUseFile">
		UPDATE	BOARD_FILE
        SET		USE_YN = 'N'
		,		CHG_DT = NOW()
        ,		CHG_IP = #{chgIp}
        ,		CHG_CUST_NO = #{chgCustNo}
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
	<update id="updateBoardLog" parameterType="int">
		UPDATE	BOARD
        SET		BOARD_VISIT = BOARD_VISIT + 1
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</update>
	<select id="getUploadedFile" parameterType="int" resultType="FileVO">
		SELECT	BOARD_FILE_PATH as boardFilePath
        ,		BOARD_FILE_NAME as boardFileName
        FROM	BOARD_FILE
        WHERE	BOARD_NO = #{boardNo}
        AND		USE_YN = 'Y'
	</select>
</mapper>