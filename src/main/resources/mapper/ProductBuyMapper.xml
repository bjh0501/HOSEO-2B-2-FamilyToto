<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="productBuy">
	<insert id="insertProductBuy">
		INSERT INTO PRODUCT_BUY (
			FAMILY_CUST_NO,			PRODUCT_NO,				PRODUCT_BUY_CREDIT,
            PRODUCT_BUY_AMOUNT,		PRODUCT_BUY_DEL_CREDIT,	REG_CUST_NO,	REG_DT,
            REG_IP,					USE_YN,					PRODUCT_BUY_GRP_NO
        ) VALUES (
			#{familyCustNo},		#{productNo},			#{productBuyCredit},
            #{productBuyAmount},	#{productBuyDelCredit},	#{regCustNo},	NOW(),
            #{regIp},				'Y',					#{productBuyGrpNo}
        )
	</insert>
	<insert id="insertProductBuyGrp"  useGeneratedKeys="true" keyProperty="productBuyGrpNo">
        INSERT INTO PRODUCT_BUY_GRP (
			REG_CUST_NO,			REG_DT,
            REG_IP,					USE_YN,
            FAMILY_CUST_ADDR,		FAMILY_CUST_ADDR_SI,	FAMILY_CUST_ADDR_GUGUN,
			FAMILY_CUST_ADDR_DONG,	ZIP_CODE1,				ZIP_CODE2
        ) VALUES (
			#{regCustNo},			NOW(),
            #{regIp},				'Y',
            #{familyCustAddr},		#{familyCustAddrSi},	#{familyCustAddrGugun},
            #{familyCustAddrDong},	#{zipCode1},			#{zipCode2}
        )
	</insert>
	<select id="getCustCredit" parameterType="ProductBuyVO" resultType="boolean">
	 SELECT EXISTS(
			SELECT	0
        FROM	CUSTOM_CREDIT
        WHERE	FAMILY_CUST_NO = #{familyCustNo}
        AND		USE_YN = 'Y'
        HAVING SUM(CREDIT_VALUE) >= #{productBuyCredit}) as cnt
	</select>
	<select id="isProductAmount"  parameterType="ProductBuyVO" resultType="boolean">
		SELECT	COUNT(*) as productNo
        FROM	PRODUCT
        WHERE	PRODUCT_NO = #{productNo}
        AND		PRODUCT_AMOUNT >= #{productBuyAmount}
        AND		USE_YN = 'Y'
	</select>
	<update id="updateProductAmount">
		UPDATE	PRODUCT
        SET		PRODUCT_AMOUNT = PRODUCT_AMOUNT - #{productBuyAmount}
        WHERE	PRODUCT_NO = #{productNo}
        AND		USE_YN = 'Y'		
	</update>
	<select id="getProductBuy" resultType="ProductVO">
		SELECT	P.PRODUCT_NO as productNo
		,		P.PRODUCT_NAME as productName
		,		P.PRODUCT_CREDIT as productCredit
		,		P.PRODUCT_AMOUNT as productAmount
		,		0 as totalCredit
		,		D.DELIVERY_NAME as deliveryName
		,		D.DELIVERY_CREDIT as deliveryCredit
		,		FC.FAMILY_CUST_NICKNAME as seller
		FROM	PRODUCT P
		 INNER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = P.FAMILY_CUST_NO AND FC.USE_YN = 'Y'
			INNER JOIN DELIVERY D ON FC.DELIVERY_NO = D.DELIVERY_NO AND D.USE_YN = 'Y'
		WHERE	P.PRODUCT_NO = #{productNo}
		AND		P.USE_YN = 'Y'
	</select>
	<select id="getCustCreditInfo" resultType="int" parameterType="int">
		SELECT	IFNULL(SUM(CREDIT_VALUE), 0) as creditValue
        FROM 	CUSTOM_CREDIT
        WHERE	FAMILY_CUST_NO = #{familyCustNo}
        AND		USE_YN = 'Y'
	</select>
	<select id="getCustMileageInfo" resultType="int" parameterType="int">
		SELECT	IFNULL(SUM(MILEAGE_VALUE), 0) as mileageValue
        FROM	CUSTOM_MILEAGE
        WHERE	FAMILY_CUST_NO = #{familyCustNo}
        AND		USE_YN = 'Y'
	</select>
	<select id="listProductBuy" resultType="ProductVO" parameterType="int">
		SELECT	P.PRODUCT_NO as productNo
		,		P.PRODUCT_NAME as productName
		,		P.PRODUCT_CREDIT as productCredit
		,		B.BASKET_AMOUNT as productAmount
		,		P.PRODUCT_CREDIT * B.BASKET_AMOUNT as totalCredit
		,		B.BASKET_NO as basketNo
		,		D.DELIVERY_NAME as deliveryName
		,		D.DELIVERY_CREDIT as deliveryCredit
		,		FC.FAMILY_CUST_NICKNAME as seller
		FROM	BASKET B
			INNER JOIN PRODUCT P ON B.PRODUCT_NO = P.PRODUCT_NO AND P.USE_YN = 'Y'
		    INNER JOIN FAMILY_CUSTOM FC ON FC.FAMILY_CUST_NO = P.FAMILY_CUST_NO AND FC.USE_YN = 'Y'
		    INNER JOIN DELIVERY D ON FC.DELIVERY_NO = D.DELIVERY_NO AND D.USE_YN = 'Y'
		WHERE	B.FAMILY_CUST_NO = #{familyCustNo}
		AND		B.USE_YN = 'Y'
		ORDER BY FC.FAMILY_CUST_NICKNAME DESC
	</select>
	<update id="updateDeleteBasket" parameterType="BasketVO">
		UPDATE	BASKET
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_CUST_NO = #{chgCustNo}
		WHERE	BASKET_NO = #{basketNo}
		AND		FAMILY_CUST_NO = #{familyCustNo}
		AND		USE_YN = 'Y'
	</update>
	<update id="updateUsedBasket" parameterType="BasketVO">
		UPDATE	BASKET
		SET		USE_YN = 'N'
		,		CHG_DT = NOW()
		,		CHG_CUST_NO = #{chgCustNo}
		WHERE	FAMILY_CUST_NO = #{familyCustNo}
		AND		BASKET_NO = #{basketNo}
		AND		USE_YN = 'Y'
	</update>
	<insert id="insertUseMileage">
		INSERT INTO  CUSTOM_MILEAGE (
			FAMILY_CUST_NO,		MILEAGE_VALUE,		MILEAGE_STATE,		REG_CUST_NO,
		    REG_DT,				REG_IP,				USE_YN
		) VALUES ( 
			#{familyCustNo},	#{mileageValue},	'PDS',				#{regCustNo},
			NOW(),				#{regIp},			'Y'
		)
	</insert>
	<select id="getCustMileage" parameterType="ProductBuyVO" resultType="boolean">
		 SELECT EXISTS(
			SELECT	0
        FROM	CUSTOM_MILEAGE
        WHERE	FAMILY_CUST_NO = #{familyCustNo}
        AND		USE_YN = 'Y'
        HAVING SUM(MILEAGE_VALUE) >= #{productBuyCredit}) as cnt
	</select>
	<select id="listBoughtProduct" parameterType="ProductBuyVO" resultType="ProductBuyVO">
		SELECT	PBG.PRODUCT_BUY_GRP_NO as productBuyGrpNo
        ,		IFNULL(PBG.CHG_DT, PBG.REG_DT) as regDt
        ,		P.PRODUCT_NAME as productName
        ,		P.PRODUCT_NO as productNo
        ,		PB.PRODUCT_BUY_CREDIT as productBuyCredit
        ,		PB.PRODUCT_BUY_AMOUNT as productBuyAmount
        ,		PB.PRODUCT_BUY_DEL_CREDIT as productBuyDelCredit
        ,		PB.PRODUCT_BUY_CREDIT * PB.PRODUCT_BUY_AMOUNT as totalCredit
        FROM	PRODUCT_BUY_GRP PBG
			INNER JOIN PRODUCT_BUY PB ON PBG.PRODUCT_BUY_GRP_NO = PB.PRODUCT_BUY_GRP_NO AND PB.USE_YN = 'Y'
            INNER JOIN PRODUCT P ON PB.PRODUCT_NO = P.PRODUCT_NO
		WHERE	PB.FAMILY_CUST_NO = #{familyCustNo}
        AND		PB.USE_YN = 'Y'
        <if test="startDt != null">
        	AND		DATE_FORMAT(IFNULL(PBG.CHG_DT, PBG.REG_DT), '%Y%c%d') BETWEEN #{startDt} and #{endDt}
       	</if>
        ORDER BY IFNULL(PBG.CHG_DT, PBG.REG_DT) DESC
	</select>
	<select id="getFamilyCustDefaultAddr" parameterType="int" resultType="RegisterCustVO">
		SELECT	FAMILY_CUST_ADDR_SI as familyCustAddrSi
		,		FAMILY_CUST_ADDR_GUGUN as familyCustAddrGugun
		,		FAMILY_CUST_ADDR_DONG as familyCustAddrDong
        ,		FAMILY_CUST_ADDR as familyCustAddr
        ,		ZIP_CODE1 as zipCode1
		FROM	FAMILY_CUSTOM
		WHERE	FAMILY_CUST_NO = #{familyCustNo}
		AND		USE_YN = 'Y';
	</select>
	<insert id="insertProduct" useGeneratedKeys="true" keyProperty="productNo">
		INSERT INTO PRODUCT (
			CATEGORY_NO,	PRODUCT_NAME,	PRODUCT_DESC,	PRODUCT_CREDIT,
		    PRODUCT_AMOUNT,	REG_CUST_NO,	REG_DT,			REG_IP,
		    USE_YN,			FAMILY_CUST_NO
		) VALUES (
			#{categoryNo},	#{productName},	#{productDesc},	#{productCredit},
		    #{productAmount},#{regCustNo},	NOW(),			#{regIp},
		    'Y',			#{familyCustNo}
		)
	</insert>
	<insert id="insertProductImgUrl">
		INSERT INTO PRODUCT_IMAGE (
			PRODUCT_NO,		PRODUCT_IMG_URL,	PRODUCT_IMG_PRIMARY,	REG_CUST_NO,
		    REG_DT,			REG_IP,				USE_YN,					PRODUCT_IMG_SERVER
		) VALUES (
			#{productNo},	#{productImgUrl},	#{productImgPrimary},	#{regCustNo},
		    NOW(),			#{regIp},			'Y',					#{productImgServer}
		)
	</insert>
	<update id="updateProduct">
		UPDATE	PRODUCT
		SET		CATEGORY_NO = #{categoryNo}
		,		PRODUCT_NAME = #{productName}
		,		PRODUCT_DESC = #{productDesc}
		,		PRODUCT_CREDIT = #{productCredit}
		,		PRODUCT_AMOUNT = #{productAmount}
		,		CHG_DT = #{chgDt}
		,		CHG_IP = #{chgIp}
		,		CHG_CUST_NO = #{chgCustNo}
		WHERE	PRODUCT_NO = #{productNo}
		AND		FAMILY_CUST_NO = #{familyCustNo}
		AND		USE_YN = 'Y'
	</update>
	<update id="updateDeleteProductImgs">
		UPDATE	PRODUCT_IMAGE
		SET		USE_YN = 'N'
		,		CHG_CUST_NO = #{chgCustNo}
		,		CHG_DT = NOW()
		,		CHG_IP = #{chgIp}
		WHERE	PRODUCT_IMAGE_NO = #{productImageNo}
		AND		USE_YN = 'Y'
	</update>	
	<select id="listProductImg" parameterType="int" resultType="ProductVO">
		SELECT	PRODUCT_IMAGE_NO as productImageNo
        ,		PRODUCT_IMG_URL as productImgUrl
        ,		PRODUCT_IMG_PRIMARY as productImgPrimary
        FROM	PRODUCT_IMAGE
        WHERE	PRODUCT_NO = #{productNo}
        AND		USE_YN = 'Y'
	</select>
	<update id="updateAllImgToN" parameterType="int">
		UPDATE	PRODUCT_IMAGE
        SET		PRODUCT_IMG_PRIMARY= 'N'
        WHERE	PRODUCT_NO = #{productNo}
        AND		USE_YN = 'Y'
	</update>
	<update id="updateChooseKingImg">
		 UPDATE	PRODUCT_IMAGE
        SET		PRODUCT_IMG_PRIMARY= 'Y'
        WHERE	PRODUCT_NO = #{productNo}
        AND		PRODUCT_IMAGE_NO = #{productImageNo}
        AND		USE_YN = 'Y'
	</update>
	<update id="updateDeleteProduct" parameterType="ProductVO">
		UPDATE	PRODUCT
		SET		USE_YN = 'N'
		,		CHG_CUST_NO = #{chgCustNo}
		,		CHG_DT = NOW()
		WHERE	PRODUCT_NO = #{productNo}
		AND		FAMILY_CUST_NO = #{familyCustNo}
		AND		USE_YN = 'Y'
	</update>
	
</mapper>