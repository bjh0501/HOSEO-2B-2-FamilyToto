<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="creditShop">
	<select id="showProduct" resultType="ProductVO">
		SELECT	P.PRODUCT_NO as productNo
		,		PC.CATEGORY_NAME as categoryName
		,		PRODUCT_NAME as productName
		,		PRODUCT_DESC as productDesc
		,		PRODUCT_CREDIT as productCredit
		,		PRODUCT_AMOUNT as productAmount
		,		FC.FAMILY_CUST_NICKNAME as familyCustNickname
		,		D.DELIVERY_NAME as deliveryName
		,		P.DELIVERY_NO as deliveryNo
        ,		AVG(PCO.PRODUCT_COMMENT_RATING) as ratingAvg
		FROM	PRODUCT P
			LEFT OUTER JOIN PRODUCT_COMMENT PCO ON P.PRODUCT_NO = PCO.PRODUCT_NO AND PCO.USE_YN = 'Y'
			INNER JOIN PRODUCT_CATEGORY PC ON P.CATEGORY_NO = PC.CATEGORY_NO AND PC.USE_YN = 'Y'
			INNER JOIN DELIVERY D ON P.DELIVERY_NO = D.DELIVERY_NO AND D.USE_YN = 'Y'
		    INNER JOIN CUSTOM C ON P.REG_CUST_NO = C.CUST_NO AND C.USE_YN = 'Y'
		    INNER JOIN FAMILY_CUSTOM FC ON C.FAMILY_CUST_NO = FC.FAMILY_CUST_NO AND FC.USE_YN = 'Y'
		WHERE	P.PRODUCT_NO = #{productNo}
		AND		P.USE_YN = 'Y';
	</select>
	
	<select id="listCreditShop" resultType="ProductVO" parameterType="int">
		SELECT	P.PRODUCT_NO as productNo
		,		P.PRODUCT_NAME as productName
		,		P.PRODUCT_CREDIT as productCredit
		,		PI.PRODUCT_IMG_URL as productImgUrl
		FROM	PRODUCT P
			INNER JOIN PRODUCT_IMAGE PI ON P.PRODUCT_NO = PI.PRODUCT_NO AND PI.USE_YN = 'Y' AND PI.PRODUCT_IMG_PRIMARY = 'Y'
		WHERE	P.USE_YN = 'Y'
		ORDER BY P.PRODUCT_NO DESC
		LIMIT #{nParameter}, 20
	</select>
	
	<insert id="insertProductComment">
		 INSERT INTO PRODUCT_COMMENT (
			PRODUCT_NO,		PRODUCT_COMMENT_CONTENTS,		PRODUCT_COMMENT_RATING,
		    REG_CUST_NO,	REG_DT,							REG_IP,
		    USE_YN,			FAMILY_CUST_NO
		 ) VALUES (
			#{productNo},	#{productCommentContents},		#{productCommentRating},
			#{regCustNo},	NOW(),							#{regIp},
			'Y'	,			#{familyCustNo}
		 )
	</insert>
	<!-- 상품이 N으로 될수도있으니  useyn체크 x-->
	<select id="isBoughtProduct" resultType="boolean" parameterType="ProductCommentVO">
		select EXISTS(SELECT PRODUCT_NO
		 FROM	PRODUCT_BUY
		 WHERE	FAMILY_CUST_NO = #{familyCustNo}
		 AND	PRODUCT_NO = #{productNo}) AS existsCheck
	</select>
	<select id="isDupleProductComment" resultType="boolean" parameterType="ProductCommentVO">
		SELECT EXISTS (SELECT PRODUCT_NO
		 FROM 	PRODUCT_COMMENT
		 WHERE	FAMILY_CUST_NO = #{familyCustNo}
		 AND	PRODUCT_NO = #{productNo}
		 AND	USE_YN = 'Y') AS existsCheck
	</select>
	<select id="listProductComment" resultType="ProductCommentVO" parameterType="ProductVO">
		SELECT	PRODUCT_COMMENT_NO as productCommentNo
		,		PRODUCT_COMMENT_CONTENTS as productCommentContents
		,		PRODUCT_COMMENT_RATING as productCommentRating
		,		FC.FAMILY_CUST_NICKNAME as familyCustNickname
		,		IFNULL(PC.CHG_DT, PC.REG_DT) as regDt
		FROM 	PRODUCT_COMMENT PC
			INNER JOIN FAMILY_CUSTOM FC ON PC.FAMILY_CUST_NO = FC.FAMILY_CUST_NO AND FC.USE_YN = 'Y'
		WHERE	PC.USE_YN = 'Y'
		AND		PC.PRODUCT_NO = #{productNo}
	</select>
	<select id="productCommentCnt" resultType="int" parameterType="ProductVO">
		SELECT	COUNT(*) as cnt
		FROM 	PRODUCT_COMMENT PC
			INNER JOIN FAMILY_CUSTOM FC ON PC.FAMILY_CUST_NO = FC.FAMILY_CUST_NO AND FC.USE_YN = 'Y'
		WHERE	PC.USE_YN = 'Y'
		AND		PC.PRODUCT_NO = #{productNo}
	</select>
	<select id="listProductImgs" resultType="ProductVO" parameterType="ProductVO">
		SELECT	PRODUCT_IMG_URL as productImgUrl
		,		PRODUCT_IMAGE_NO as productNo
        ,		PRODUCT_IMG_PRIMARY as productImgPrimary
        FROM	PRODUCT P
			INNER JOIN PRODUCT_IMAGE PI ON P.PRODUCT_NO = PI.PRODUCT_NO AND PI.USE_YN = 'Y'
        WHERE	P.PRODUCT_NO = #{productNo}
        AND		P.USE_YN = 'Y'
        ORDER BY PRODUCT_IMG_PRIMARY DESC
	</select>
	<select id="listProductCategory" resultType="CategoryVO">
		SELECT	CATEGORY_NAME as categoryName
		,		CATEGORY_NO as categoryNo
		FROM	PRODUCT_CATEGORY
		WHERE	USE_YN = 'Y'
	</select>
</mapper>